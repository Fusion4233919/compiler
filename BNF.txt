Program         = {Block}
Block           = Fun_Def | Def_Exp, ";" 
Fun_Def         = "function", FUN_TYPE, Fun_ID, "(", Fun_Var_List, ")", "do", {Exp}, "done"
Fun_Var_List    = "void" | TYPE, Var, [{",", TYPE, Var}]
Def_Exp         = TYPE, Var, [{",", Var}]
TYPE            = "int" | "float"
Var             = ID, {"[", Number, "]"}
Letter          = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
digit           = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
digit_with_zero = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
ID              = Letter, {Letter}
Fun_ID          = "_", Letter, {Letter}
Number          = "0" | digit, {digit_with_zero}
LValue          = ID, {"[", (ID | Number), "]"}
Fun_Value       = Fun_ID, "(", [(LValue | Number), [{",", (LValue | Number)}]], ")"
Exp             = Def_Exp, ";" | As_Exp, ";" | Op_Exp, ";" | Cond_Exp, ";" | If_Stmt | Lop_Stmt | "break", ";" | "continue", ";" | "return", [Op_Exp], ";"
As_Exp          = LValue, "=", Op_Exp
Cond_Exp        = Cond_Term, [{"||", Cond_Term}]
Cond_Term       = Cond_Factor, [{"&&", Cond_Factor}]
Cond_Factor     = "(", Cond_Exp, ")" | Op_Exp, ("<" | ">" | "==" | "!=" | "<=" | ">="), Op_Exp
Op_Exp          = Op_Term, [{("+" | "-"), Op_Term}]
Op_Term         = Op_Factor, [{("*" | "/" | "%"), Op_Factor}]
Op_Factor       = "(", Op_Exp, ")" | LValue | Fun_Value | Number
If_Stmt         = "if", "(", Cond_Exp, ")", "do", {Exp}, "done"
Lop_Stmt        = "loop", "(", Cond_Exp, ")", "do", {Exp}, "done"