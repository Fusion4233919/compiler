Program:        Program Block | Block 
Block:	        Fun_Def | Def_Exp";" 


Def_Exp:        TYPE Var_List

TYPE:		    "int" | "string"

FUN_TYPE:       TYPE | "void"

Var_List:	    Var_List"," Var | Var

Var:		    Var"["Number"]" | ID


Fun_Def:	    "function" FUN_TYPE Fun_ID "("Fun_Var_List")" "do" Exp_List "done"

Fun_Var_List:	Fun_Var_List"," Fun_Var | Fun_Var | "void"

Fun_Var:	    TYPE Var


Number:		    0|([1-9][0-9]*)

String:         \"(\\.|[^"\\])*\"

ID:		        ([A-Z]|[a-z])+

Fun_ID:		    _([A-Z]|[a-z])+



Exp_List:	    Exp_List Exp | Exp

Exp:	        Def_Exp";" | Op_Exp";" | As_Exp";" | Cond_Exp";"
                | If_Stmt | Lop_Stmt
                | "break"";" | "continue"";" | "return" Op_Exp";" | "return" ";"


As_Exp:		    LValue = Op_Exp | LValue = String


Cond_Exp:	    Cond_Exp "||" Cond_Term | Cond_Term 

Cond_Term:  	Cond_Term "&&" Cond_Factor | Cond_Factor

Cond_Factor:	"("Cond_Exp")" | Op_Exp Cond_op Op_Exp

Cond_op:	    "<" | ">" | "==" | "!=" | "<=" | ">="



Op_Exp:		    Op_Exp Add_op Op_Term | Op_Term

Op_Term:	    Op_Term Mul_op Op_Factor | Op_Factor

Op_Factor:	    "("Op_Exp")" | LValue | Fun_Value | Number

Add_op:		    "+" | "-" 

Mul_op:		    "*" | "/" | "%"

    

If_Stmt:	    "if" "("Cond_Exp")" "do" Exp_List "done"

Lop_Stmt:	    "loop" "("Cond_Exp")" "do" Exp_List "done"

Fun_Value:      Fun_ID "("List")"

List:           List "," LValue | List "," Number | List "," String |

LValue:         LValue "[" LValue "]" | LValue "["Number"]" | ID 


